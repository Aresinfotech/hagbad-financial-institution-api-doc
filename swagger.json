{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "hagbad.greysystems.eu",
  "basePath": "/api/v1",
  "info": {
    "version": "1.0.0-beta",
    "title": "Hagbad Financial Institution Online REST API",
    "contact": {
      "email": "developers@greysystems.eu",
      "url": "http://www.greysystems.eu/#contact"
    },
    "license": {
      "name": "All Rights reserved GreySystems 2022",
      "url": "http://www.greysystems.eu"
    },
    "termsOfService": "https://www.greysystems.eu",
    "x-logo": {
      "url": "http://www.greysystems.eu/wp-content/uploads/2017/07/logo-Grey-menu.png",
      "background": "#FFFFFF"
    },
    "description": "This page contains the documentation on how to use the Hagbad API.\n\n**API is in beta version, breaking changes may be introduced before the final release candidate is released**\n\n# Introduction\nThis is the technical documentation for the IT team in charge of integrating Hagbad Moneypool System with their corporate financial platform.\n\nWe must do 3 integrations to start using Hagbad Moneypool Platform as part of your financial offering. \n\nThe table below illustrates those API integrations: \n\n| Operation | Description | API Owner | Integration done by |\n|-----|-----|-------|-------|\n| Into Holding | To send money into a moneypool by one of its members. | Hagbad IT Team | Financial Institution IT Team |\n| Search Customer | To search customers in the financial institution database. | Financial Institution IT Team | Hagbad IT Team |\n| Out of Holding | To send money from a moneypool to one of its members. | Financial Institution IT Team | Hagbad IT Team |\n\n The Hagbad  API is built on top of HTTP:\n- RESTFul\n- Predictable resource URLs. \n- Accepts and returns JSON in the HTTP body. \n- Returns HTTP response codes to indicate errors. \n\nYou can use your favorite HTTP/REST library for your programming language to consume this API. \n \n \n# Hagbad System\nPlease, visit our website: www.hagbad.net\n\n\n# Authentication\n\nAll Hagbad APIs, including this one, use [OpenId Connect](http://openid.net) protocol to authenticate users. Specifically the security tokens used are JWT tokens. \n\nTo issue new tokens, you have to use the Hagbad OpenId compliant server located at https://hagbad.greysystems.eu/auth (for more info please check [GreySystems Identity Server Doc](https://grey-systems.github.io/gs-identity-doc/))\n\n* **User Token**: Gets an `access_token` issued on behalf of an end-user. To get an user access_token you have to implement the [Authorization Code Flow](https://www.keycloak.org/docs/3.3/server_admin/topics/sso-protocols/oidc.html). \n\n**How I use the tokens?**\n As stated in the introduction, both tokens types are JWT tokens, and you should set that token in the HTTP `Authorization` Header of the API call in this way: \n\n```\nAuthorization: Bearer {the_token}\n```\n\n# Common HTTP Error Responses\n\nThe Rest API uses the following common HTTP status codes to communicate general issues or errors to the clients: \n\n* HTTP **400** (Invalid Request): The request provided is invalid (request is not well formed, a mandatory field is not provided, etc..). \n* HTTP **403** (Forbidden): You are not allowed to access or update the requested resource. \n* HTTP **404** (Not found): The searched item could not be found (the moneypool was not found, etc..). \n* HTTP **409** (Conflict): There is a conflict when trying to execute the operation (status change not allowed, etc..). \n* HTTP **500** (Internal Server Error): Some internal component has failed to process your request. Please notify about this error to GreySystems team.\n"
  },
  "tags": [
    {
      "name": "Into Holding",
      "description": "## Into Holding Transactions.\n\nInto Holding transactions occur when customers of your financial institution want to send money to an Hagbad Moneypool, in which they are members.\n"
    },
    {
      "name": "Customer Search",
      "description": "## Customer Search on Financial Institution Database.\n\nWhen we register new customers in Hagbad, we want to know if those persons are already customers in your Financial Institution. \n\nTherefore, you need to provide us with an API to search customers in your database by mobile number and birthdate.\n\nWe will allow people to register in Hagbad Platform, even if they are not customers of your Financial Institution. However, Hagbad customers must be registered on your Financial Institution to send or receive money from a moneypool.\n\nIn this section, we include the input and output that your API should provide to perform customer searchs.\n"
    },
    {
      "name": "Out of Holding",
      "description": "## Out of Holding Transactions.\n\nMoneypool members need to get paid at some moment. Those payments are the Out of Holding Transaction. \n\nWe will push those payment orders to your Financial Institution, using the API that you must provide us for this purpose. \n\nPlease, be aware that there are 2 different payment methods:\n- Cash Pickup\n- Mobile Wallet\n\nIn this section, we include the input and output that your API should provide to perform Out of Holdings.\n"
    }
  ],
  "securityDefinitions": {
    "JWT": {
      "description": "You can obtain a JSON Web Token (`access_token`), using our OpenID Connect Authorizations Server",
      "type": "apiKey",
      "name": "Authorization: Bearer access_token",
      "in": "header"
    }
  },
  "security": [
    {
      "JWT": []
    }
  ],
  "paths": {
    "/validate": {
      "post": {
        "summary": "Validate INH transaction.",
        "description": "Check if the into holding transfer is valid to confirm.\n",
        "operationId": "validateInh",
        "parameters": [
          {
            "name": "IntoHoldingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntoHoldingRequest"
            }
          }
        ],
        "tags": [
          "Into Holding"
        ],
        "responses": {
          "200": {
            "description": "Transfer has been validated properly."
          },
          "400": {
            "description": "Invalid Request. message attribute of response contains detailed information about the issue.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict. The beneficiary moneypool status does not allow operations, the selected customer does not belong to this moneypool, etc.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/comfirn": {
      "post": {
        "summary": "Confirm INH transaction",
        "description": "Confirm a validated into holding transfer.\n",
        "operationId": "confirmInh",
        "parameters": [
          {
            "name": "IntoHoldingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntoHoldingRequest"
            }
          }
        ],
        "tags": [
          "Into Holding"
        ],
        "responses": {
          "200": {
            "description": "Transfer has been validated properly."
          },
          "400": {
            "description": "Invalid Request. message attribute of response contains detailed information about the issue.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict. The beneficiary moneypool status does not allow operations, the selected customer does not belong to this moneypool, etc.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/customer/search": {
      "post": {
        "summary": "Search customer by phone and birth date",
        "description": "Search customer by phone and birth date.\n",
        "operationId": "searchCustomer",
        "parameters": [
          {
            "name": "SearchCustomerRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchCustomerRequest"
            }
          }
        ],
        "tags": [
          "Customer Search"
        ],
        "responses": {
          "200": {
            "description": "Transfer has been validated properly.",
            "schema": {
              "$ref": "#/definitions/SearchCustomerResponse"
            }
          },
          "400": {
            "description": "Invalid Request. message attribute of response contains detailed information about the issue.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payment": {
      "post": {
        "summary": "Make a payment to a moneypool beneficiary",
        "description": "**WARNING - INCOMPLETE**\n\nMake a payment to a moneypool beneficiary.\n",
        "operationId": "makePayment",
        "parameters": [
          {
            "name": "Payment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          }
        ],
        "tags": [
          "Out of Holding"
        ],
        "responses": {
          "200": {
            "description": "Payment was successful.",
            "schema": {
              "$ref": "#/definitions/PaymentResponse"
            }
          },
          "400": {
            "description": "Invalid Request. message attribute of response contains detailed information about the issue.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code. This error code should define the error type returned.",
          "example": "IH-0001"
        },
        "message": {
          "type": "string",
          "description": "The error description. A message that resume the error thrown by the system.",
          "example": "Something happened."
        }
      }
    },
    "IntoHoldingRequest": {
      "type": "object",
      "required": [
        "transactionCode",
        "sender",
        "beneficiary",
        "amount",
        "commission"
      ],
      "properties": {
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "example": "TC00001"
        },
        "sender": {
          "description": "Sender information.",
          "$ref": "#/definitions/SenderCustomer"
        },
        "beneficiary": {
          "description": "Beneficiary (moneypool code).",
          "type": "string",
          "example": "MP001"
        },
        "amount": {
          "description": "Transaction amount.",
          "$ref": "#/definitions/Amount"
        },
        "commission": {
          "description": "Transaction commission.",
          "$ref": "#/definitions/Commission"
        },
        "remarks": {
          "description": "Remark message.",
          "type": "string",
          "example": "Inh transfer"
        }
      }
    },
    "SenderCustomer": {
      "required": [
        "name",
        "lastname",
        "birthDate",
        "mobileNumber"
      ],
      "type": "object",
      "properties": {
        "code": {
          "description": "Customer code.",
          "type": "string",
          "example": "CU123"
        },
        "name": {
          "description": "Customer name.",
          "type": "string",
          "example": "Ben"
        },
        "lastname": {
          "description": "Customer last name.",
          "type": "string",
          "example": "Simmons"
        },
        "birthDate": {
          "description": "Customer birthdate.",
          "type": "string",
          "format": "date",
          "pattern": "YYYY-MM-DD",
          "example": "2021-05-23"
        },
        "mobileNumber": {
          "description": "Customer mobile number.",
          "type": "string",
          "example": "+34666666666"
        }
      }
    },
    "Amount": {
      "description": "The amount and currency of the operation.",
      "type": "object",
      "required": [
        "ccy",
        "value"
      ],
      "properties": {
        "ccy": {
          "description": "Currency.",
          "type": "string",
          "example": "EUR"
        },
        "value": {
          "description": "Amount.",
          "type": "number",
          "format": "double",
          "example": 300.56
        }
      }
    },
    "Commission": {
      "description": "The amount and currency of the operation.",
      "type": "object",
      "required": [
        "ccy",
        "value"
      ],
      "properties": {
        "ccy": {
          "description": "Currency.",
          "type": "string",
          "example": "EUR"
        },
        "value": {
          "description": "Amount.",
          "type": "number",
          "format": "double",
          "example": 5
        }
      }
    },
    "SearchCustomerRequest": {
      "type": "object",
      "required": [
        "phoneNumber",
        "birthDate"
      ],
      "properties": {
        "phoneNumber": {
          "description": "Customer phone number.",
          "type": "string",
          "example": "+34666666688"
        },
        "birthDate": {
          "description": "Customer birthdate.",
          "type": "string",
          "format": "date",
          "pattern": "YYYY-MM-DD",
          "example": "2021-05-23"
        }
      }
    },
    "SearchCustomerResponse": {
      "type": "object",
      "required": [
        "code",
        "firstName",
        "lastName",
        "email",
        "nationality",
        "birthDate",
        "cellPhone"
      ],
      "properties": {
        "code": {
          "description": "Customer code.",
          "type": "string",
          "example": "CU123"
        },
        "firstName": {
          "description": "Customer code.",
          "type": "string",
          "example": "Ben"
        },
        "lastName": {
          "description": "Customer last name.",
          "type": "string",
          "example": "Simmons"
        },
        "nationality": {
          "description": "Customer nationality.",
          "type": "string",
          "example": "ESP"
        },
        "email": {
          "description": "Customer email.",
          "type": "string",
          "format": "email",
          "example": "ag@mail.com"
        },
        "birthDate": {
          "description": "Customer birthdate.",
          "type": "string",
          "format": "date",
          "pattern": "YYYY-MM-DD",
          "example": "2021-05-23"
        },
        "phone": {
          "description": "Customer phone number.",
          "type": "string",
          "example": "+34666666688"
        },
        "cellPhone": {
          "description": "Customer mobile number.",
          "type": "string",
          "example": "+34666666666"
        }
      }
    },
    "PaymentRequest": {
      "type": "object",
      "required": [
        "moneypoolId",
        "destinationCustomerId",
        "position",
        "amount"
      ],
      "properties": {
        "moneypoolId": {
          "description": "Moneyool Id.",
          "type": "number",
          "format": "int",
          "example": 1
        },
        "destinationCustomerId": {
          "description": "Destination customer Id.",
          "type": "number",
          "format": "int",
          "example": 1
        },
        "position": {
          "description": "Position.",
          "type": "number",
          "format": "int",
          "example": 3
        },
        "amount": {
          "description": "Transaction amount.",
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "PaymentResponse": {
      "type": "object",
      "required": [
        "transactionCode"
      ],
      "properties": {
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "example": "PY00002"
        }
      }
    }
  }
}
